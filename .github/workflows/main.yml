name: CICDS

on:
  push: 
    branches: 
    - 'feature/*'
    - 'main'
    - 'develop'

  release:
    types: 
     - created

env:
  IMAGE_NAME: crfiappostech.azurecr.io/health-med-scheduler
  
jobs:
  CI:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set Branch Name and Version to be Used
        id: vars
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV             
          SHA_SHORT=${{github.sha}}
          echo "SHA_SHORT=${SHA_SHORT:0:7}" >> $GITHUB_ENV
      - name: Set Image Version
        shell: bash
        run: |
          if [ "${BRANCH_NAME}" = "main" ] ; then
            echo "IMAGE_VERSION=hml-$SHA_SHORT" >> $GITHUB_ENV
          elif [ "${BRANCH_NAME}" = "develop" ] ; then
            echo "IMAGE_VERSION=stg-$SHA_SHORT" >> $GITHUB_ENV
          elif [[ "${BRANCH_NAME}" == feature/* ]] ; then
            echo "IMAGE_VERSION=dev-$SHA_SHORT" >> $GITHUB_ENV          
          elif [[ "${{ github.event_name }}" == "release" ]]; then
             TAG_NAME=${GITHUB_REF#refs/tags/}
              echo "IMAGE_VERSION=$TAG_NAME" >> $GITHUB_ENV              
          fi        
    
      - name: Code Checkout
        uses: actions/checkout@v4.1.1        
        
      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: ${{secrets.AZURE_REGISTRY_USER}}
          # Container registry password
          password: ${{secrets.AZURE_REGISTRY_PASS}} 
          # Container registry server url
          login-server: ${{secrets.AZURE_REGISTRY_URL}} 

      - name: Build and push docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          build-args: |
            "APP_VERSION=${{env.IMAGE_VERSION}}"
            
          file: Dockerfile
          push: true       
          tags: |            
            ${{env.IMAGE_NAME}}:latest
            ${{env.IMAGE_NAME}}:${{env.IMAGE_VERSION}}
    
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:   
          
      - name: Set Branch Name and Version to be Used
        id: vars
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV             
          SHA_SHORT=${{github.sha}}
          echo "SHA_SHORT=${SHA_SHORT:0:7}" >> $GITHUB_ENV
          
      - name: Set Image Version
        shell: bash
        run: |
          if [ "${BRANCH_NAME}" = "main" ] ; then
            echo "IMAGE_VERSION=hml-$SHA_SHORT" >> $GITHUB_ENV
          elif [ "${BRANCH_NAME}" = "develop" ] ; then
            echo "IMAGE_VERSION=stg-$SHA_SHORT" >> $GITHUB_ENV
          elif [[ "${BRANCH_NAME}" == feature/* ]] ; then
            echo "IMAGE_VERSION=dev-$SHA_SHORT" >> $GITHUB_ENV          
          elif [[ "${{ github.event_name }}" == "release" ]]; then
              TAG_NAME=${GITHUB_REF#refs/tags/}
              echo "IMAGE_VERSION=$TAG_NAME" >> $GITHUB_ENV              
          fi
      
      - name: Azure login        
        uses: azure/login@v2.1.0
        with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
         resource-group: '${{ secrets.AZURE_RESOURCE_GROUP }}' 
         cluster-name: '${{ secrets.AZURE_CLUSTER_NAME }}'
      
      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3
   
      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
              azure-vote-all-in-one-redis.yaml
          images: ' ${{env.IMAGE_NAME}}:${{ env.IMAGE_VERSION }}'
          pull-images: false      
        
