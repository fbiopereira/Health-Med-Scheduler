name: CICD

on:
  push: 
    branches: 
    - 'feature/*'
    - 'main'
    - 'develop'

  release:
    types: 
     - created

env:
  IMAGE_NAME: fbiopereira/movies-api-pos-tech-fiap 
  
jobs:
  CI:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set Branch Name and Version to be Used
        id: vars
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV             
          SHA_SHORT=${{github.sha}}
          echo "SHA_SHORT=${SHA_SHORT:0:7}" >> $GITHUB_ENV
      - name: Set Image Version
        shell: bash
        run: |
          if [ "${BRANCH_NAME}" = "main" ] ; then
            echo "IMAGE_VERSION=hml-$SHA_SHORT" >> $GITHUB_ENV
          elif [ "${BRANCH_NAME}" = "develop" ] ; then
            echo "IMAGE_VERSION=stg-$SHA_SHORT" >> $GITHUB_ENV
          elif [[ "${BRANCH_NAME}" == feature/* ]] ; then
            echo "IMAGE_VERSION=dev-$SHA_SHORT" >> $GITHUB_ENV          
          elif [[ "${{ github.event_name }}" == "release" ]]; then
             TAG_NAME=${GITHUB_REF#refs/tags/}
              echo "IMAGE_VERSION=$TAG_NAME" >> $GITHUB_ENV              
          fi        
    
      - name: Code Checkout
        uses: actions/checkout@v4.1.1    

      - name: Azure Login
        uses: Azure/login@v2.1.0
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: # optional
          # ClientId of the Azure Service principal created.
          client-id: # optional
          # TenantId of the Azure Service principal created.
          tenant-id: # optional
          # Azure subscriptionId
          subscription-id: # optional
          # Set this value to true to enable Azure PowerShell Login in addition to Azure CLI login
          enable-AzPSSession: # optional
          # Name of the environment. Supported values are azurecloud, azurestack, azureusgovernment, azurechinacloud, azuregermancloud. Default being azurecloud
          environment: # optional, default is azurecloud
          # Set this value to true to enable support for accessing tenants without subscriptions
          allow-no-subscriptions: # optional
          # Provide audience field for access-token. Default value is api://AzureADTokenExchange
          audience: # optional, default is api://AzureADTokenExchange
          # The type of authentication. Supported values are SERVICE_PRINCIPAL, IDENTITY. Default value is SERVICE_PRINCIPAL
          auth-type: # optional, default is SERVICE_PRINCIPAL
          
        

      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: ${{secrets.AZ_REGISTRY_USERNAME}}
          # Container registry password
          password: ${{secrets.AZ_REGISTRY_PASS}} 
          # Container registry server url
          login-server: ${{secrets.AZ_LOGIN_SERVER}} 

      - name: Build and push docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          build-args: |
            "APP_VERSION=${{env.IMAGE_VERSION}}"
            
          file: Dockerfile
          push: true       
          tags: |            
            ${{env.IMAGE_NAME}}:latest
            ${{env.IMAGE_NAME}}:${{env.IMAGE_VERSION}}
            
           
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - name: Azure Login
        uses: Azure/login@v1.4.5
        with:      
          creds: ${{secrets.AZURE_CREDENTIALS}}
          
      - name: Set Branch Name and Version to be Used
        id: vars
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV             
          SHA_SHORT=${{github.sha}}
          echo "SHA_SHORT=${SHA_SHORT:0:7}" >> $GITHUB_ENV
          
      - name: Set Image Version
        shell: bash
        run: |
          if [ "${BRANCH_NAME}" = "main" ] ; then
            echo "IMAGE_VERSION=hml-$SHA_SHORT" >> $GITHUB_ENV
          elif [ "${BRANCH_NAME}" = "develop" ] ; then
            echo "IMAGE_VERSION=stg-$SHA_SHORT" >> $GITHUB_ENV
          elif [[ "${BRANCH_NAME}" == feature/* ]] ; then
            echo "IMAGE_VERSION=dev-$SHA_SHORT" >> $GITHUB_ENV          
          elif [[ "${{ github.event_name }}" == "release" ]]; then
             TAG_NAME=${GITHUB_REF#refs/tags/}
              echo "IMAGE_VERSION=$TAG_NAME" >> $GITHUB_ENV              
          fi
          
      - name: Azure Container Apps Build and Deploy
        uses: Azure/container-apps-deploy-action@v2
        with:
          imageToDeploy: ${{env.IMAGE_NAME}}:${{env.IMAGE_VERSION}}
          containerAppName: movies-api-fase2
          resourceGroup: rg-fiap-trabalho-fase2
